{"version":3,"sources":["components/Square.js","components/Board.js","components/Moves.js","App.js","serviceWorker.js","index.js"],"names":["Square","_ref","onClick","value","highlight","react_default","a","createElement","className","style","color","Board","squares","winnerPostion","emptyArr","Array","fill","map","item","rowIndex","key","colIndex","components_Square","includes","Move","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","reversed","handleReverse","bind","assertThisInitialized","setState","move","history","i","length","concat","Math","floor","_this2","_this$props","winner","xIsNext","jumpTo","stepNumber","overflowY","border","height","width","step","fontWeight","calculateLocation","React","Component","App","handleClick","_this$state","trimedHistory","slice","Xfilled","filter","Ofilled","Xwin","name","position","Owin","array","location","winningArray","unit","splice","every","num","arr","push","_this$state2","calculateWinner","src","alt","components_Board","Moves","Boolean","window","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.192228aa.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Square({onClick, value, highlight}) {\r\n  return (\r\n    <button \r\n      className=\"square\" \r\n      onClick={onClick}\r\n      style={{color: highlight? 'red': null }}\r\n      >\r\n      {value}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default Square;","import React from 'react';\r\nimport Square from './Square';\r\n\r\nfunction Board ({squares, onClick, winnerPostion}) { \r\n    let emptyArr = Array(15).fill(null);\r\n    return (\r\n      <div>\r\n         {  \r\n          emptyArr.map( (item, rowIndex) => \r\n            ( <div key = {rowIndex} className=\"board-row\">\r\n               {\r\n                emptyArr.map( (item, colIndex) => \r\n                (<Square \r\n                  key={15*rowIndex + colIndex}\r\n                  value={squares[15*rowIndex + colIndex]}\r\n                  onClick={() => onClick(15*rowIndex + colIndex)}\r\n                  highlight={ winnerPostion? winnerPostion.includes(15*rowIndex + colIndex) : null }\r\n                 />) \r\n                )\r\n              }\r\n            </div> )\r\n          )\r\n        }\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Board;","import React from 'react';\r\n\r\nclass Move extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      reversed: false\r\n    };\r\n    this.handleReverse = this.handleReverse.bind(this);\r\n  }\r\n\r\n  handleReverse() {\r\n    this.setState({\r\n      reversed: !this.state.reversed\r\n    })\r\n  }\r\n\r\n  calculateLocation(squares, move, history) {\r\n   for (let i = 0; i < squares.length ; i++ ) {\r\n    if (squares[i] !== history[move-1][i]) {\r\n      return `row/行: ${1+ Math.floor(i / 15)}, column/列: ${1 + (i % 15)}`\r\n    }\r\n   }\r\n  }\r\n\r\n  render() {\r\n   const {winner, xIsNext, jumpTo, history, stepNumber} = this.props;\r\n   const {reversed} = this.state;\r\n\r\n   return(\r\n     <div>\r\n       <div>\r\n         { winner? \"Winner/获胜方: \" + winner: \r\n           (history.length===255? 'It\\'s a draw!/平局!' :\r\n             ( \"Next player/ 下一方: \" + (xIsNext ? \"X\" : \"O\") ) \r\n           )\r\n         }\r\n       </div>\r\n       <div>\r\n        <button onClick={this.handleReverse}>Reverse the order/ 反向排序</button>\r\n        <div style={{overflowY: 'scroll', border: '1px solid blue', height: '500px', width: '300px'}}>\r\n           <ol className = {reversed? 'ol-reverse' : null} >\r\n           { history.map((step, move) =>  \r\n             (<li key={move}>\r\n                <button onClick={() => jumpTo(move)}\r\n                        style = {{fontWeight: move ===stepNumber? 'bold' : null}}\r\n                >              \r\n                  { move? 'Go to move #/ 退回到步数' + move: 'Go to game start/ 重新开始'}\r\n                </button>\r\n                <br/>\r\n                <div>\r\n                 {move? this.calculateLocation(step, move, history) : null} \r\n                </div>                      \r\n              </li>)\r\n           )}\r\n           </ol>\r\n        </div>    \r\n       </div>      \r\n     </div>\r\n   ) \r\n  }  \r\n}\r\n\r\nexport default Move;\r\n","import React, { Component } from 'react';\nimport Board from './components/Board';\nimport Moves from './components/Moves';\nimport './App.css';\n\nclass App extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        history: [Array(255).fill(null)],\n        stepNumber: 0,\n        xIsNext: true\n      };\n\n      this.handleClick = this.handleClick.bind(this);\n      this.jumpTo = this.jumpTo.bind(this);\n    }\n\n    handleClick(i) {\n      const {history, stepNumber, xIsNext} = this.state;\n      const trimedHistory = history.slice(0, stepNumber + 1);\n      const squares = trimedHistory[stepNumber].slice();\n\n      if (squares[i]) {\n        return;\n      }\n\n      squares[i] = xIsNext ? \"X\" : \"O\";\n      \n      this.setState({\n        history: trimedHistory.concat([squares]),\n        stepNumber: stepNumber+1,\n        xIsNext: !xIsNext\n      });\n    }\n\n    jumpTo(step) {\n      this.setState({\n        stepNumber: step,\n        xIsNext: (step % 2) === 0\n      });\n    }\n\n  calculateWinner(squares) {\n    const Xfilled = squares.map( (step, i) => step === 'X'? i: 'empty').filter( i => i !== 'empty');\n    const Ofilled = squares.map( (step, i) => step === 'O'? i: 'empty').filter( i => i !== 'empty');\n \n      let Xwin = this.calculateLocation( Xfilled );      \n      if (Xwin) {\n        return { name: 'X', position: Xwin }; \n      }\n\n      let Owin = this.calculateLocation( Ofilled );      \n      if (Owin) {\n        return { name: 'O', position: Owin }; \n      }\n    }    \n\n   calculateLocation(array) {\n      for (let i = 0; i < array.length - 4; i++) {\n        let location = this.winningArray(array[i]);\n        while (location.length) {\n          let unit = location.splice(0, 5);\n          let checkLocation = unit.every( num => array.includes(num) );\n          if(checkLocation) {\n            return unit;\n          }\n        }        \n      }\n      return false;     \n    }    \n\n  winningArray(location) {\n      let arr = [];     \n\n      if(location%15 <= 10) {\n        for (let i = 0; i < 5; i++) {\n          arr.push(location + i);\n        }     \n      }\n\n      if(location <= 165) {\n         for (let i = 0; i < 5; i++) {\n          arr.push(location + i * 15);       \n        }        \n      }\n\n      if(location%15 <= 10 && location <= 165) {\n        for (let i = 0; i < 5; i++) {\n          arr.push(location + i * 15 + i);       \n        }\n      }\n\n      if(location%15 >= 4 && location <= 165) {\n        for (let i = 0; i < 5; i++) {\n          arr.push(location + i * 15 - i);       \n        }\n      }\n\n      return  arr;\n    }\n\n    render() {\n      const { history, stepNumber, xIsNext } = this.state;   \n      const squares = history[stepNumber];\n      const winner = this.calculateWinner(squares);  \n\n      return (\n        <div className=\"game\">        \n      <h1>Gobang</h1>     \n                     \n      <img src='https://is4-ssl.mzstatic.com/image/thumb/Purple128/v4/17/f9/e8/17f9e842-f128-b7cf-2ca5-86fcd977218e/source/1200x630bb.jpg'\n             alt='Gobang'             \n      />      \n        <div className=\"main-field\">\n          <div className=\"game-board\">\n            <Board\n              squares={squares}\n              onClick={ i => winner? null: this.handleClick(i) }\n              winnerPostion= {winner? winner.position : null}\n            />\n          </div>\n          <div className=\"game-info\">\n           <Moves \n              history={history} \n              xIsNext={xIsNext}\n              winner={winner? winner.name: null}\n              jumpTo={ (step) => this.jumpTo(step) }\n              stepNumber = {stepNumber}\n            />\n          </div>\n        </div>\n      </div>\n      );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}